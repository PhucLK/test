aws eks create-cluster --region us-east-1 --name mucluster607634559408 --kubernetes-version 1.24  --role-arn arn:aws:iam::607634559408:role/EKS --resources-vpc-config subnetIds=subnet-08f1a3ba3985b44b9,subnet-0cc73331e99577044
eksctl create cluster --name udacity607634559408 --region us-east-1 --version 1.23 --vpc-private-subnets subnet-project-subnet-private1-us-east-1a,subnet-project-subnet-private2-us-east-1b --without-nodegroup


eksctl delete cluster --name udacity607634559408 --region us-east-1  
eksctl create cluster --name udacity607634559408 --region us-east-1 --node-type m5.large --nodes 1

kubectl apply -f kubernetes/aws-secret.yml
kubectl apply -f kubernetes/env-secret.yml
kubectl apply -f kubernetes/env-configmap.yml
kubectl apply -f kubernetes/feed-api-deployment.yml
kubectl apply -f kubernetes/feed-api-service.yml
kubectl apply -f kubernetes/user-api-deployment.yml
kubectl apply -f kubernetes/user-api-service.yml
kubectl apply -f kubernetes/frontend-deployment.yml
kubectl apply -f kubernetes/frontend-service.yml
kubectl apply -f kubernetes/reverseproxy-deployment.yml
kubectl apply -f kubernetes/reverseproxy-service.yml

kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml

kubectl autoscale deployment udagram-feed-api --cpu-percent=50 --min=1 --max=2

kubectl expose deployment udagram-frontend --type=LoadBalancer --name=publicfrontend --port=80
kubectl expose deployment udagram-reverseproxy --type=LoadBalancer --name=publicreverseproxy

docker build . -t 0357860030/udagram-frontend:v1


docker run --name postgres -p 5455:5432 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=postgres -d postgres


